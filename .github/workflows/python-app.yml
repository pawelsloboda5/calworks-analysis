name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
     
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
     
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
     
    - name: Run tests
      run: |
        pytest tests/ --cov=Script_python --cov-report=xml
     
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
     
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
     
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort mypy
     
    - name: Check formatting with black
      run: black --check .
     
    - name: Check imports with isort
      run: isort --check-only --diff .
     
    - name: Type checking with mypy
      run: mypy Script_python/

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
     
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
     
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
     
    - name: Build documentation
      run: |
        cd docs
        make html
